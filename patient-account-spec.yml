openapi: 3.0.1
info:
  title: Patient-Account
  description: Patient account specification to define the patient account API
  version: 1.0
servers:
  - url: http://localhost:8080/v1
    description: Developer server
  - url: http://localhost/v1
    description: Production server
tags:
  - name: patients
    description: Patient Acount    
paths:
  /patients:
    get:
      summary: Retrieve all patients.
      tags:
        - patients
      security:
        - BearerAuth
      operationId: getAllPatients
      responses:
        200:  
          $ref: '#/components/responses/SuccessGetAll'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'       
  /patient:
    post:
      summary: Create a new patient.
      tags:
        - patients
      security:
        - BearerAuth
      operationId: createPatientAccount
      requestBody:
        $ref: '#/components/requestBody/patientBody'
      responses:
        201:  
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'          
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'                
  /patient/{id}:
    get:
      summary: Get a patient by ID.
      tags:
        - patients
      security:
        - BearerAuth
      operationId: getPatientByID
      parameters:
        - name: id
          in: path
          description: Patient ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:  
          $ref: '#/components/responses/Success'
        401:
          $ref: '#/components/responses/Unauthorized'          
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'               
    put:
      summary: Update a patient by ID.
      tags:
        - patients
      security:
        - BearerAuth
      operationId: PatientByID
      requestBody:
        $ref: '#/components/requestBody/patientBody'      
      parameters:
        - name: id
          in: path
          description: Patient ID
          required: true
          schema:
            type: integer
            format: int64            
      responses:
        202:  
          $ref: '#/components/responses/Accepted'
        400:
          $ref: '#/components/responses/BadRequest'               
        401:
          $ref: '#/components/responses/Unauthorized'          
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'       
    delete:
      summary: Delete a patient by ID.
      tags:
        - patients
      security:
        - BearerAuth
      operationId: deletePatientByID
      parameters:
        - name: id
          in: path
          description: Patient ID
          required: true
          schema:
            type: integer
            format: int64            
      responses:
        204:  
          description: No connect
        401:
          $ref: '#/components/responses/Unauthorized'          
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'               
components:
  schemas:
    requestBody:
      required:
      - firstName
      - lastName
      - dateBirth
      - gender
      - phoneNumber
      - user
      type: object    
      properties:
        firstName:
          type: string
          minLength: 2
          example: 'Boonruang'
        lastName:
          type: string
          example: 'Seedapunt'
        dateBirth:
          type: string
          format: date
          example: 22/04/2020  
        gender:
          type: string
          example: M
          enum:
            - M 
            - F 
        phoneNumber:
          type: number 
          format: int32
          example: 555-555-555
        user:
          $ref: '#/components/schemas/user'           
    body_response_error:
      required:
        - code_error
        - message
      type:
        object
      properties:
        code_error:
          type: integer
          format: int64
          example: 123
        message:
          type: string
          example: message_to_show_from_server
    patient:
      required:
      - id
      - firstName
      - lastName
      - dateBirth
      - gender
      - phoneNumber
      - user
      type: object    
      properties:
        id:
          type: integer
          format: int64
          example: 1
        firstName:
          type: string
          minLength: 2
          example: 'Boonruang'
        lastName:
          type: string
          example: 'Seedapunt'
        dateBirth:
          type: string
          format: date
          example: 22/04/2020  
        gender:
          type: string
          example: M
          enum:
            - M 
            - F 
        phoneNumber:
          type: number 
          format: int32
          example: 555-555-555
        user:
          $ref: '#/components/schemas/user'       
    user:
      required:
        - id
        - email
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          format: email
          minLength: 10
          example: support@vpano360.com
  requestBody:
    patientBody:
      description: Patient JSON object required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestBody'        
  responses:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'     
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'       
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'   
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'  
    Accepted:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patient'                
    Success:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patient'             
    Created:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patient'                        
    SuccessGetAll:
      description: Ok
      content:
        application/json:
          schema:
             type: array
             items:
              oneOf:
                - $ref: '#/components/schemas/patient'  
                - $ref: '#/components/schemas/patient'  
  securitySchemes:
    BearerAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT
